---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/":
    get:
      summary: list articles
      tags:
      - "/"
      responses:
        '200':
          description: successful
  "/api/v1/articles":
    get:
      summary: list articles
      tags:
      - Articles
      parameters:
      - name: search
        in: query
        description: Search posts by keywords from title or body
        schema:
          type: string
      - name: author
        in: query
        description: Filter posts by author name
        schema:
          type: string
      - name: tags
        in: query
        description: Filter posts by tags
        schema:
          type: string
      - name: sort
        in: query
        description: 'Sort posts by titles: asc/desc'
        schema:
          type: string
      - name: page
        in: query
        description: Choose page
        schema:
          type: integer
      - name: status
        in: query
        schema:
          type: string
          enum:
          - unpublished
          - published
        description: 'To filter Article by status: published/unpublished'
      responses:
        '200':
          description: successful
    post:
      summary: create article
      tags:
      - Articles
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                status:
                  type: string
                author_id:
                  type: integer
              required:
              - title
              - body
              - author_id
              - status
  "/api/v1/articles/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show article
      tags:
      - Articles
      responses:
        '200':
          description: successful
    patch:
      summary: update article
      tags:
      - Articles
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                status:
                  type: string
                author_id:
                  type: integer
              required:
              - title
              - body
              - author_id
              - status
    put:
      summary: update article
      tags:
      - Articles
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                status:
                  type: string
                author_id:
                  type: integer
              required:
              - title
              - body
              - author_id
              - status
    delete:
      summary: delete article
      tags:
      - Articles
      responses:
        '200':
          description: successful
  "/api/v1/articles/{article_id}/tags/{id}":
    parameters:
    - name: article_id
      in: path
      description: article_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    post:
      summary: tag_add article
      tags:
      - Articles
      responses:
        '200':
          description: successful
  "/api/v1/authors":
    get:
      summary: list authors
      tags:
      - Authors
      responses:
        '200':
          description: successful
    post:
      summary: create author
      tags:
      - Authors
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/authors/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: delete author
      tags:
      - Authors
      responses:
        '200':
          description: successful
  "/api/v1/comments":
    get:
      summary: list comments
      tags:
      - Comments
      responses:
        '200':
          description: successful
    post:
      summary: create comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                status:
                  type: string
                article_id:
                  type: integer
                author_id:
                  type: integer
              required:
              - body
              - author_id
              - article_id
              - status
  "/api/v1/comments/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
    patch:
      summary: update comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                status:
                  type: string
                article_id:
                  type: integer
                author_id:
                  type: integer
              required:
              - body
              - author_id
              - article_id
              - status
    put:
      summary: update comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                status:
                  type: string
                article_id:
                  type: integer
                author_id:
                  type: integer
              required:
              - body
              - author_id
              - article_id
              - status
    delete:
      summary: delete comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
  "/api/v1/likes":
    get:
      summary: list likes
      tags:
      - Likes
      responses:
        '200':
          description: successful
    post:
      summary: create like
      tags:
      - Likes
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author_id:
                  type: integer
                likeable_type:
                  type: string
                likeable_id:
                  type: integer
              required:
              - author_id
              - likeable_type
              - likeable_id
  "/api/v1/tags":
    get:
      summary: list tags
      tags:
      - Tags
      responses:
        '200':
          description: successful
    post:
      summary: create tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/tags/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: delete tag
      tags:
      - Tags
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000/
